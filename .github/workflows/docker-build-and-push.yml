name: Create and publish a Docker image

on:
  push:
    branches: ["**"] # run for any commit or tag push on any branch
    tags-ignore: ["v**"] # reserve v* tags for releases
  pull_request:
    types: [opened, ready_for_review] # only trigger when PR is opened or set on ready_for_review
  release:
    types: [published] # will use tag name regardless of naming

permissions:
  contents: read
  packages: write

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        registry:
          - name: ghcr.io
            user: ${{ github.repository_owner }}
            secret: GITHUB_TOKEN
        platform: [linux/amd64, linux/arm64]
        image:
          - name: dqualizer/dqtranslator

    steps:
      - name: Prepare
        run: |
          platform=${{ matrix.platform }}
          echo "PLATFORM_PAIR=${platform//\//-}" >> $GITHUB_ENV

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ matrix.image.name }}

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          registry: ${{ matrix.registry.name }}
          username: ${{ matrix.registry.user }}
          password: ${{ secrets[matrix.registry.secret] }}

      - name: Build and push by digest
        id: build
        uses: docker/build-push-action@v6
        with:
          platforms: ${{ matrix.platform }}
          build-args: |
            GITHUB_USER=${{ github.repository_owner }}
            GITHUB_TOKEN=${{ secrets.GITHUB_TOKEN }}
          outputs: type=image,name=${{ matrix.registry.name }}/${{ matrix.image.name }},push-by-digest=true,name-canonical=true,push=true

      - name: Export digest
        run: |
          mkdir -p /tmp/digests
          digest="${{ steps.build.outputs.digest }}"
          touch "/tmp/digests/${digest#sha256:}"

      - name: Upload digest
        uses: actions/upload-artifact@v4
        with:
          name: digests-${{ env.PLATFORM_PAIR }}
          path: /tmp/digests/*
          if-no-files-found: error
          retention-days: 1

  merge:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        registry:
          - name: ghcr.io
            user: ${{ github.repository_owner }}
            secret: GITHUB_TOKEN
        image:
          - name: dqualizer/dqtranslator

    needs:
      - build
    steps:
      - name: Download digests
        uses: actions/download-artifact@v4
        with:
          path: /tmp/digests
          pattern: digests-*
          merge-multiple: true

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ matrix.registry.name }}/${{ matrix.image.name }}
          tags: |
            type=ref,event=branch
            type=ref,event=tag
            type=ref,event=pr
            type=raw,value=latest,enable=${{ github.ref == format('refs/heads/{0}', 'main') }}

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          registry: ${{ matrix.registry.name }}
          username: ${{ matrix.registry.user }}
          password: ${{ secrets[matrix.registry.secret] }}

      - name: Create manifest list and push
        working-directory: /tmp/digests
        run: |
          docker buildx imagetools create $(jq -cr '.tags | map("-t " + .) | join(" ")' <<< "$DOCKER_METADATA_OUTPUT_JSON") \
            $(printf '${{ matrix.registry.name }}/${{ matrix.image.name }}@sha256:%s ' *)

      - name: Inspect image
        run: |
          docker buildx imagetools inspect ${{ matrix.registry.name }}/${{ matrix.image.name }}:${{ steps.meta.outputs.version }}
